<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lib.citylib.camTra.mapper.TrajectoryStatMapper">

    <resultMap id="BaseResultMap" type="com.lib.citylib.camTra.model.CarTrajectory">
            <result property="carNumber" column="car_number"/>
            <result property="carType" column="car_type"/>
            <result property="distance" column="distance"/>
            <result property="startTime" column="start_time"/>
            <result property="endTime" column="end_time"/>
            <result property="timeInterval" column="time_interval"/>
            <result property="avgSpeed" column="avg_speed"/>
    </resultMap>

    <resultMap id="PlusResultMap" type="com.lib.citylib.camTra.model.CarTrajectoryPlus">
        <result property="carNumber" column="car_number"/>
        <result property="carType" column="car_type"/>
        <result property="distance" column="distance"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="timeInterval" column="time_interval"/>
        <result property="avgSpeed" column="avg_speed"/>
        <result property="pointNum" column="point_num"/>
        <result property="tableName" column="table_name"/>
        <result property="startCamId" column="start_cam_id"/>
        <result property="endCamId" column="end_cam_id"/>
    </resultMap>

    <sql id="Base_Column_List">
        car_number,distance,start_time,end_time,
        time_interval,avg_speed
    </sql>
    <delete id="deleteTable">
        delete from trajectory_stat_plus where table_name = #{tableName}
    </delete>
    <insert id="insertBatch" parameterType="com.lib.citylib.camTra.model.CarTrajectory" useGeneratedKeys="false">
        insert into trajectory_stat
        values
        <foreach collection="trajectories"  separator="," item="trajectory">
            (#{trajectory.carNumber},#{trajectory.carType}, #{trajectory.distance}, #{trajectory.startTime},
             #{trajectory.endTime}, #{trajectory.timeInterval}, #{trajectory.avgSpeed}, #{trajectory.pointNum})
        </foreach>
    </insert>

    <insert id="insertBatchPlus" parameterType="com.lib.citylib.camTra.model.CarTrajectoryPlus" useGeneratedKeys="false">
        insert into trajectory_stat_plus
        values
        <foreach collection="trajectories"  separator="," item="trajectory">
            (#{trajectory.carNumber},#{trajectory.carType}, #{trajectory.distance}, #{trajectory.startTime},
            #{trajectory.endTime}, #{trajectory.timeInterval}, #{trajectory.avgSpeed}, #{trajectory.pointNum},
            #{trajectory.tableName}, #{trajectory.startCamId}, #{trajectory.endCamId})
        </foreach>
    </insert>

    <select id="getStatByCar" parameterType="com.lib.citylib.camTra.query.ListStatisticsParam" resultMap="BaseResultMap">
        select *
        from trajectory_stat_plus
        <where>
            car_number = #{carNumber} and table_name = 'camtrajectory'
            <if test="minTime != '' and minTime != null">
                and start_time &gt;= #{minTime}
            </if>
            <if test="maxTime != '' and maxTime != null">
                and start_time &lt;= #{maxTime}
            </if>
        </where>
    </select>
    <delete id="clear">
        truncate table trajectory_stat
    </delete>
    <select id="listStatByAll" resultType="com.lib.citylib.camTra.model.TrajectoryStat">
        select car_number as carNumber,
               max(car_type) as carType,
               count(distinct DATE_FORMAT(start_time,'%Y-%m-%d')) as dayCount,
               sum(distance) / 1000 as totalDistance,
               avg(distance) / 1000 as avgDistance,
               count(*) as traCount,
               sum(time_interval) / 3600 as totalTime,
               avg(time_interval) / 3600 as avgTime,
               avg(avg_speed) as avgSpeed,
               totalDistance / dayCount as avgDistancePerDay,
               totalTime / dayCount as avgTimePerDay
        from trajectory_stat_plus
        <where>
            table_name = 'camtrajectory'
            <if test="param.carNumber != '' and param.carNumber != null">
                and car_number like concat('%',#{param.carNumber},'%')
            </if>
            <if test="param.minTime != '' and param.minTime != null">
                and start_time &gt;= #{param.minTime}
            </if>
            <if test="param.maxTime != '' and param.maxTime != null">
                and start_time &lt;= #{param.maxTime}
            </if>
        </where>
        group by car_number
        having traCount >= 10
    </select>
    <select id="getTotalStat" parameterType="com.lib.citylib.camTra.query.ListStatisticsParam" resultType="java.util.HashMap">
        select count(distinct car_number) as carNum,
               count(*) as traNum,
               sum(point_num) as pointNum
        from trajectory_stat_plus
        <where>
            table_name = 'camtrajectory'
            <if test="minTime != '' and minTime != null">
                and start_time &gt;= #{minTime}
            </if>
            <if test="maxTime != '' and maxTime != null">
                and start_time &lt;= #{maxTime}
            </if>
        </where>
    </select>

    <select id="getFlowStatByStartCluster" resultType="com.lib.citylib.camTra.model.ClusterFlowInfo">
        select end_cam_id as camId, count(*) as count
        from trajectory_stat_plus
        where (start_time between #{startTime} and #{endTime}) and point_num > 2 and distance > 1000 and table_name = 'camtrajectory'
        <if test="points !=null and points.size() > 0">
            AND start_cam_id in
            <foreach collection="points" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        group by end_cam_id
    </select>

    <select id="getFlowStatByEndCluster" resultType="com.lib.citylib.camTra.model.ClusterFlowInfo">
        select start_cam_id as camId, count(*) as count
        from trajectory_stat_plus
        where (start_time between  #{startTime} and #{endTime}) and point_num > 2 and distance > 1000 and table_name = 'camtrajectory'
        <if test="points !=null and points.size() > 0">
            AND end_cam_id in
            <foreach collection="points" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        group by start_cam_id
    </select>


    <select id="getTableStatByTime" resultMap="PlusResultMap">
        select *
        from trajectory_stat_plus
        where (start_time between  #{startTime} and #{endTime}) and table_name = #{tableName}
    </select>

    <select id="getTableStatTraCount" resultType="Long">
        select count(*)
        from trajectory_stat_plus
        where (start_time between  #{startTime} and #{endTime}) and table_name = #{tableName}
    </select>

    <select id="getTableStatCarCount" resultType="Long">
        select count(distinct car_number)
        from trajectory_stat_plus
        where (start_time between  #{startTime} and #{endTime}) and table_name = #{tableName}
    </select>

    <select id="getTableStatPointCount" resultType="Long">
        select sum(point_num)
        from trajectory_stat_plus
        where (start_time between  #{startTime} and #{endTime}) and table_name = #{tableName}
    </select>

    <select id="getTableStatCarTypeCount" resultType="com.lib.citylib.camTra.model.TableStatCarTypeCount">
        select distinct car_type as carType, count(*) as count
        from trajectory_stat_plus
        where (start_time between  #{startTime} and #{endTime}) and table_name = #{tableName}
        group by car_type
    </select>

    <select id="getTableStatDateTraCount" resultType="com.lib.citylib.camTra.model.TableStatDateTraCount">
        select distinct DATE_FORMAT(start_time,'%m/%d') as traDate, count(*) as count
        from trajectory_stat_plus
        where (start_time between  #{startTime} and #{endTime}) and table_name = #{tableName}
        group by traDate
    </select>

    <select id="getTableStatDistanceTraCount" resultType="com.lib.citylib.camTra.model.TableStatDistanceTraCount">
        select FLOOR(distance / 1000) as traDistance, count(*) as count
        from trajectory_stat_plus
        where (start_time between  #{startTime} and #{endTime}) and table_name = #{tableName}
        group by traDistance
    </select>

    <select id="getTableStatTimeIntervalTraCount" resultType="com.lib.citylib.camTra.model.TableStatTimeIntervalTraCount">
        select FLOOR(time_interval / 1800) as traTimeInterval, count(*) as count
        from trajectory_stat_plus
        where (start_time between  #{startTime} and #{endTime}) and table_name = #{tableName}
        group by traTimeInterval
    </select>

    <select id="getTableStatPerDayHourCount" resultType="com.lib.citylib.camTra.model.TableStatPerDayHourCount">
        select distinct DATE_FORMAT(start_time,'%H') as traHour, count(*) as count
        from trajectory_stat_plus
        where (start_time between  #{startTime} and #{endTime}) and table_name = #{tableName}
        group by traHour
    </select>

    <select id="getTableStatPerDayTraCount" resultType="com.lib.citylib.camTra.model.TableStatPerDayTraCount">
        select distinct DATE_FORMAT(start_time,'%d') as traDay, count(*) as count
        from trajectory_stat_plus
        where (start_time between  #{startTime} and #{endTime}) and table_name = #{tableName}
        group by traDay
    </select>

    <select id="getTableStatTraCountByCar" resultType="com.lib.citylib.camTra.model.TableStatTraCount">
        select tra_count as traCount, count(*) as count
        from (select count(*) as tra_count
              from trajectory_stat_plus
              where (start_time between  #{startTime} and #{endTime}) and table_name = #{tableName}
              group by car_number)
        group by traCount
        order by traCount
    </select>

</mapper>
